name: Store Repository Structure in MongoDB

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight (adjust as needed)

jobs:
  storeRepoStructure:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'  # Use Python 3.8 or any compatible version

    - name: Install dependencies
      run: |
        pip install PyGithub pymongo python-dotenv

    - name: Store Repository Structure in MongoDB
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
      run: |
        python -c "
import os
import json
from github import Github
from pymongo import MongoClient
from dotenv import load_dotenv
import datetime

load_dotenv()  # Load environment variables from .env file

GITHUB_TOKEN = os.getenv('GITHUB_TOKEN')
MONGODB_URI = os.getenv('MONGODB_URI')

# Initialize GitHub client
g = Github(GITHUB_TOKEN)

# Function to fetch repository structure
def fetch_repo_structure(repo_name, owner='learnlink-20'):
    repo = g.get_repo(f'{owner}/{repo_name}')
    return process_folder(repo)

def process_folder(repo, path=''):
    contents = repo.get_contents(path)
    folder_structure = {
        'readme': None,
        'media': [],
        'assets': []
    }

    for item in contents:
        if item.type == 'file':
            raw_url = item.download_url
            if item.name.lower() == 'readme.md':
                folder_structure['readme'] = raw_url
            elif item.name.endswith(('.mp4', '.jpg', '.jpeg', '.png')):
                folder_structure['media'].append(raw_url)
            else:
                folder_structure['assets'].append(raw_url)
        elif item.type == 'dir':
            folder_structure[item.name] = process_folder(repo, item.path)

    return folder_structure

# Function to store the structure in MongoDB
def store_in_mongodb(repo_name, structure):
    client = MongoClient(MONGODB_URI)
    db = client['myDatabase']  # Change to your database name
    collection = db['repoStructures']  # Change to your collection name

    collection.update_one(
        {'repo': repo_name},
        {'$set': {'structure': structure, 'lastUpdated': datetime.datetime.utcnow()}},
        upsert=True
    )
    print('Repository structure stored successfully')

# Main execution
if __name__ == '__main__':
    repo_name = 'lab-1'  # Specify your repository name
    structure = fetch_repo_structure(repo_name)
    store_in_mongodb(repo_name, structure)
        "
